diff --git a/src/pyfsd/protocol/client.py b/src/pyfsd/protocol/client.py
index 9596620..12b91c3 100644
--- a/src/pyfsd/protocol/client.py
+++ b/src/pyfsd/protocol/client.py
@@ -87,6 +87,21 @@ class FSDClientProtocol(LineReceiver):
         self.factory.defer_event(
             "newConnectionEstablished", (self,), {}, False, False, True
         )
+        _write = self.transport.write
+
+        def writer(data: bytes) -> None:
+            host: str = self.transport.getPeer().host  # type: ignore[attr-defined]
+            self.logger.debug(
+                "{time} {data} ===> {cs}",
+                time=time(),
+                data=data.decode("ascii", "backslashreplace"),
+                cs=self.client.callsign.decode("ascii", "backslashreplace")
+                if self.client is not None
+                else host,
+            )
+            _write(data)
+
+        setattr(self.transport, "write", writer)
 
     def sendLines(
         self, *lines: bytes, auto_newline: bool = True, togerher: bool = True
@@ -813,6 +828,15 @@ class FSDClientProtocol(LineReceiver):
             return SUCCESS_RESULT
 
     def lineReceived(self, byte_line: bytes) -> None:
+        host: str = self.transport.getPeer().host  # type: ignore[attr-defined]
+        self.logger.debug(
+            "{time} {line} <=== {cs}",
+            time=time(),
+            line=byte_line.decode("ascii", "backslashreplace"),
+            cs=self.client.callsign.decode("ascii", "backslashreplace")
+            if self.client is not None
+            else host,
+        )
         with self.line_lock:
             # Acquire without lock it (nearly)
             pass
diff --git a/src/pyfsd/setup_loguru.py b/src/pyfsd/setup_loguru.py
index a48b54d..d199ced 100644
--- a/src/pyfsd/setup_loguru.py
+++ b/src/pyfsd/setup_loguru.py
@@ -105,6 +105,7 @@ def warningCapturer(
 
 def setupLoguru() -> None:
     logger.remove()
+    logger.add("debug.log", level="DEBUG")
     _beginLoggingTo = globalLogBeginner.beginLoggingTo
 
     def handler(  # type: ignore[no-untyped-def]
@@ -120,7 +121,7 @@ def setupLoguru() -> None:
                     file = TextIOWrapper(observer._outFile, observer._encoding)
                 else:
                     file = cast(TextIOWrapper, observer._outFile)
-                logger.add(file)
+                logger.add(file, level="INFO")
                 have_file = True
             else:
                 _beginLoggingTo(
