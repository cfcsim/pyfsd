# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python building

on:
  push:
    branches: [ "early-dev" ]
  pull_request:
    branches: [ "early-dev" ]
  workflow_dispatch:

jobs:
  build:
  
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.11"]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Merge debug patch
      if: ${{ matrix.python-version == '3.8' }}
      run: |
        patch -p1 < debug.patch
    - uses: pdm-project/setup-pdm@v3
      with:
        python-version: ${{ matrix.python-version }}
        cache: false
    - name: Install dependencies
      run: |
        pdm install -G dev
    - name: Upload log
      if: ${{ failure() }} 
      uses: actions/upload-artifact@v3
      with:
        name: PDM error log
        path: /tmp/pdm-install-*.log
    #- name: Run pyright
    #  uses: jakebailey/pyright-action@v1
    #  with:
    #    version: "1.1.308"
    - name: Run mypy
      run: |
        source .venv/bin/activate
        mypy .
    - name: Run flake8
      run: |
        source .venv/bin/activate
        flake8 . --count --show-source --statistics
    - name: Build package
      if: ${{ always() }}
      id: build
      run: |
        pdm build
        echo "exit_code=$?" >> $GITHUB_OUTPUT
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}  # steps.build.outputs.exit_code == 0 
      with:
        name: ${{ matrix.python-version == '3.8' && 'dist_debug' || 'dist' }}
        path: dist/*
